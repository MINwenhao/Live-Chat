{"version":3,"sources":["Log.jsx","services.js","Error.jsx","AddFriend.jsx","SendMessage.jsx","Messages.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Log","log","setLog","name","setName","setError","error","onChange","e","target","value","className","onClick","username","fetch","method","headers","Headers","body","JSON","stringify","catch","Promise","reject","code","then","response","ok","json","logout","Error","AddFriend","searchName","setSearch","result","addFriend","err","SendMessage","useState","messageList","setMessage","text","setText","useEffect","setInterval","fetchMessages","messages","filter","sort","a","b","timestamp","localeCompare","messageLists","map","message","key","sendMessages","Messages","friendList","setFriend","active","length","temp","forEach","element","console","friends","friendsList","friend","deleteFriend","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.345cba84.chunk.js","sourcesContent":["import React from 'react';\nimport {fetchLogin} from './services';\nimport {logout} from './services';\n\nfunction Log({log,setLog,name,setName,setError,error}){\n    const onType=(e)=>{\n        setName(e.target.value)\n    }\n   \n\n    if(log==='login'){\n        return(\n            <div >\n                <label>username:<input onChange={onType} value={name} ></input></label>\n                <br/>\n                <button className='log'\n                    onClick ={()=>{\n                        setError('');\n                        setLog('logout');\n                        fetchLogin(name)\n                        .catch(()=>{\n                            setError('invaild name')\n                            setLog('login')\n                        })\n                    }\n                    }\n                >{log}</button>\n            </div>\n        )\n    }if(log==='logout'){\n        return(\n            <div >\n                <button className='log'\n                    onClick ={()=>{\n                        logout(name)\n                        .catch((e)=>{\n\n                            setError('missing name')\n                            throw e;\n                        })\n                        setLog('login')\n                    }\n                    }\n                >{log}</button>\n            </div>\n        )\n    }else{\n        return(\n            <div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Log;\n","export const fetchLogin=(username)=>{\n    return fetch('/session',{\n        method:'POST',\n        headers: new Headers({\n            \"Content-Type\": \"application/json\"\n          }),\n        body: JSON.stringify({username})\n    })\n    .catch(()=>{\n        return Promise.reject({code:'network-error'})\n    })\n    .then((response)=>{\n        if(!response.ok){\n            return Promise.reject({code:'invalid name'})\n        }\n        return response.json;\n    })\n};\n\nexport const fetchFriends = (name) =>{\n    return fetch('/user',{\n        method: 'GET',\n        headers:new Headers({\n            'content-type':'application/json',\n        }),\n    })\n    .catch(()=>{\n        return Promise.reject({code:'network-error'})\n    })\n    .then((response)=>{\n        if(!response.ok){\n            return Promise.reject({code:'invalid login'})\n        }\n        return response.json();\n    })\n};\n\nexport const addFriend =(username,searchName)=>{\n    return fetch('/user/' + username,{\n        method:'POST',\n        headers: new Headers({\n            \"Content-Type\": \"application/json\"\n          }),\n        body: JSON.stringify({username,searchName})\n    })\n    .catch(()=>{\n        return Promise.reject({code:'network-error'})\n    })\n    .then((response)=>{\n        if(!response.ok){\n            return response.json().then(result => Promise.reject(result.code));\n        }\n        return response.json;\n    })\n}\nexport const logout =(name) =>{ \n    return fetch('/user',{\n        method:'DELETE',\n        headers:new Headers({\n            'content-type':'application/json',\n        }),\n        body: JSON.stringify({name})\n    })\n    .catch(()=>{\n        return Promise.reject({code:'network-error'})\n    })\n    .then((response)=>{\n        if(!response.ok){\n        \n            return Promise.reject({code:'missing name'})\n        }\n        return response.json;\n    })\n}\n\nexport const fetchMessages = (name) =>{\n    return fetch('/messages/' + name,{\n        method: 'post',\n        headers:new Headers({\n            'content-type':'application/json',\n        }),\n         body: JSON.stringify({name})\n    })\n    .catch((e)=>{\n        return Promise.reject({code:'network-error'})\n    })\n    .then((response)=>{\n        if(!response.ok){\n            return Promise.reject({code:'you are not allowed to get message'})\n        }\n        return response.json();\n    })\n};\nexport const sendMessages = (name,message) =>{\n    return fetch('/messages/' + name,{\n        method: 'put',\n        headers:new Headers({\n            'content-type':'application/json',\n        }),\n         body: JSON.stringify({name,message})\n    })\n    .catch((e)=>{\n        return Promise.reject({code:'network-error'})\n    })\n    .then((response)=>{\n        if(!response.ok){\n            return Promise.reject({code:'you are not allowed to update messages'})\n        }\n        return response.json;\n    })\n};\nexport const deleteFriend = (name,friend) =>{\n    return fetch('/user/' + name,{\n        method: 'delete',\n        headers:new Headers({\n            'content-type':'application/json',\n        }),\n         body: JSON.stringify({name,friend})\n    })\n    .catch((e)=>{\n        return Promise.reject({code:'network-error'})\n    })\n    .then((response)=>{\n        if(!response.ok){\n            return Promise.reject({code:'missing-name'})\n        }\n        return response.json;\n    })\n};\nexport const requestInfo=(name)=>{\n    return fetch('/friend',{\n        method:'get',\n    })\n    .catch((e)=>{\n        return Promise.reject({code:'network-error'})\n    })\n    .then((response)=>{\n        if(!response.ok){\n            return Promise.reject({code:\"Didn't find you record\"})\n        }\n        return response.json();\n    })\n}\n","\nimport React from 'react';\n\nfunction Error ({error}){\n    return(\n        <div className=\"err\">\n            {error}\n        </div>\n    )\n}\nexport default Error;","import React  from 'react';\nimport {addFriend} from './services';\n\nfunction AddFriend({name,searchName,setSearch,setError}){\n    \n    const onType=(e)=>{\n        setSearch(e.target.value)\n    }\n    return (\n        <div>\n            <input\n            onChange={onType} value={searchName}\n            ></input>\n        \n            <button\n            onClick={()=>{\n                addFriend(name,searchName)\n                .catch((err)=>{\n                    setError(err)\n                    throw err;\n                })\n                .then(()=>{\n                    setError('You successfully added  '+ searchName)\n                    setSearch(name)\n                })\n\n            }}\n        \n        >add new friend</button>\n    </div>\n    )\n}\n\nexport default AddFriend;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport {fetchMessages } from './services'\nimport {sendMessages } from './services'\n\nfunction SendMessage ({name,setName,setLog,setError}){\n    const[messageList,setMessage]=useState([]);\n    const[text,setText]=useState('');\n    const onType=(e)=>{\n        setText(e.target.value)\n    }\n\n    \n\n\n    useEffect(()=>{\n        setInterval(()=>{\n            fetchMessages(name)\n        .catch((e)=>{\n            setError('you are not allowed to get message')\n            throw e;\n        })\n        .then((messages)=>{\n            messages = messages.filter(function(e){return e}); \n            messages.sort((a, b) => a.timestamp.localeCompare(b.timestamp))\n            const messageLists=messages.map(message=>(\n                <div key={message.timestamp}>\n                    <div className =\"username\">\n                    <span className =\"username\">{message.name}</span>\n                    </div>\n                    <span className=\"timestamp\">{message.timestamp}</span>\n                    <br/>\n                    <p className=\"message-text\">{message.text}</p>\n                    <br/>\n                </div> \n            ))\n            setMessage(messageLists)\n        })\n\n        },1500)\n\n    },[text])\n    \n    return(\n        <div>\n            <span className='title'>you are chatting with {name}</span>\n            <br/>\n            {messageList}\n            <br/>\n            <div>\n                <input\n                onChange={onType} value={text}\n                ></input>\n                <button\n                onClick={()=>{\n                    sendMessages(name,text)\n                    .catch((e)=>{\n                        setError('you are not allowed to send message')\n                        throw e;\n                    })\n                    .then(()=>{\n                        setError('you just send a message')\n                        setText('')\n                    })\n                }}\n                >send</button>\n                <br/>\n                <button\n                onClick={()=>{\n                    setLog('logout')\n                    setError('')\n                }\n                }\n                >back to Contacts</button>\n            </div>\n        </div>\n    )\n}\nexport default SendMessage;","import React, { useState, useEffect } from 'react';\nimport {fetchFriends,deleteFriend,requestInfo} from './services';\nimport AddFriend from './AddFriend';\nimport SendMessage from './SendMessage';\n\n\nfunction Messages({log,name,setError,setLog,setName}){\n    const [friendList,setFriend]=useState([]);\n    const[searchName,setSearch]=useState('');\n\n    \n\n    useEffect(()=>{\n        requestInfo(name)\n        .catch((e)=>{\n            throw e;\n        })\n        .then((active)=>{\n            if(active.length!==0){\n            \n                let temp='';\n                active.forEach(element => {\n                    temp+=element +' and ';\n                });\n                console.log(temp);\n                \n                setError(active+' requests to be your friend.')\n                \n                \n            }\n        })\n\n\n\n        fetchFriends(name)\n        .then((friends)=>{\n            \n            const friendsList=friends.map(friend=>(\n                <li key={friend}>\n                    <button className=\"friendlist\"\n                    onClick={()=>{\n                        setName(friend)\n                        setLog('sendmessage')\n                        \n                    }}\n                    >{friend}</button>\n                    <button\n                    onClick={()=>{\n                        deleteFriend(name,friend)\n                        .catch((e)=>{\n                            throw e;\n                        })\n                        .then(()=>{\n                            setError('You have deleted '+friend )\n                            setSearch(friend)\n                        })\n                    }}\n                    >X</button>\n                </li>\n            ))\n            setFriend(friendsList)\n        })\n\n    },[searchName,log])\n\n    if(log==='logout'){\n        return (\n            <div>\n                <AddFriend\n                setError={setError}\n                searchName={searchName}\n                setSearch={setSearch}\n                name={name}\n                />\n                \n                <ul>\n                   {friendList}\n                </ul>\n                \n            </div>    \n        )\n    }if(log==='login'){\n        return (\n            <div>\n                Welcome\n            </div>\n        )\n    }else{\n        return (\n            <div>\n                <SendMessage\n                name={name}\n                setName={setName}\n                setLog={setLog}\n                setError={setError}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Messages;","import React, { useState } from 'react';\nimport Log from './Log';\nimport './App.css';\nimport Error from './Error';\nimport Messages from './Messages';\n\nfunction App() {\n  const[log,setLog]=useState('login');\n  const[name,setName]=useState('');\n  const[error,setError]=useState('');\n\n  return (\n    <div className=\"App\">\n\n      <div>\n          <Error\n          error={error}\n          />\n      </div>\n      <Messages\n      setName={setName}\n      setLog={setLog}\n      setError={setError}\n      log={log}\n      name={name}\n      />\n      \n      <div>\n        <Log\n        log={log}\n        setLog={setLog}\n        name={name}\n        setName={setName}\n        setError={setError}\n        error={error}\n        />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}